# KBO 데이터 자동 업데이트 Windows 스케줄러 설정

param(
    [switch]$Install,
    [switch]$Uninstall,
    [switch]$Test
)

$ProjectPath = $PSScriptRoot
$LogPath = Join-Path $ProjectPath "logs"
$ScriptName = "KBODataUpdate"

# 로그 디렉토리 생성
if (!(Test-Path $LogPath)) {
    New-Item -ItemType Directory -Path $LogPath -Force
    Write-Host "📁 로그 디렉토리 생성: $LogPath" -ForegroundColor Green
}

# 업데이트 스크립트 생성
$UpdateScript = @"
# KBO 데이터 자동 업데이트 스크립트
`$ProjectPath = "$ProjectPath"
`$LogPath = "$LogPath"
`$Timestamp = Get-Date -Format "yyyy-MM-dd_HH-mm-ss"
`$LogFile = Join-Path `$LogPath "update_`$Timestamp.log"

"🏏 KBO 데이터 업데이트 시작 - `$Timestamp" | Add-Content `$LogFile

Set-Location `$ProjectPath

# Node.js 확인
if (!(Get-Command "node" -ErrorAction SilentlyContinue)) {
    "❌ Node.js를 찾을 수 없습니다. PATH를 확인해주세요." | Add-Content `$LogFile
    exit 1
}

if (!(Get-Command "npm" -ErrorAction SilentlyContinue)) {
    "❌ npm을 찾을 수 없습니다. PATH를 확인해주세요." | Add-Content `$LogFile
    exit 1
}

# 데이터 업데이트 실행
"📊 데이터 스크래핑 시작..." | Add-Content `$LogFile

try {
    npm run update-data *>> `$LogFile
    "✅ 데이터 업데이트 성공!" | Add-Content `$LogFile
    
    # Git 변경사항 확인
    `$changes = git status --porcelain
    
    if (`$changes) {
        git add . *>> `$LogFile
        `$commitMessage = "🤖 KBO 데이터 자동 업데이트 - `$(Get-Date -Format 'yyyy-MM-dd HH:mm:ss')

        - 팀 순위 및 성적 업데이트
        - 매직넘버 재계산  
        - 홈/원정 전적 갱신

        🤖 Generated by Windows Task Scheduler"
        
        git commit -m "`$commitMessage" *>> `$LogFile
        git push *>> `$LogFile
        
        "📤 Git 푸시 완료!" | Add-Content `$LogFile
    } else {
        "📌 변경사항 없음" | Add-Content `$LogFile
    }
} catch {
    "❌ 오류 발생: `$_" | Add-Content `$LogFile
}

"🏁 업데이트 완료 - `$(Get-Date -Format 'yyyy-MM-dd_HH-mm-ss')" | Add-Content `$LogFile
"----------------------------------------" | Add-Content `$LogFile

# 7일 이상 된 로그 파일 정리
Get-ChildItem `$LogPath -Name "update_*.log" | Where-Object { 
    `$_.CreationTime -lt (Get-Date).AddDays(-7) 
} | Remove-Item -Force
"@

$UpdateScriptPath = Join-Path $ProjectPath "auto-update.ps1"
$UpdateScript | Out-File -FilePath $UpdateScriptPath -Encoding UTF8

Write-Host "✅ 자동 업데이트 스크립트 생성: $UpdateScriptPath" -ForegroundColor Green

function Install-Tasks {
    Write-Host "🕒 Windows 스케줄러에 작업 등록 중..." -ForegroundColor Yellow
    
    # 18:00 작업
    $Action1 = New-ScheduledTaskAction -Execute "PowerShell.exe" -Argument "-ExecutionPolicy Bypass -File `"$UpdateScriptPath`""
    $Trigger1 = New-ScheduledTaskTrigger -Daily -At "18:00"
    $Settings1 = New-ScheduledTaskSettingsSet -AllowStartIfOnBatteries -DontStopIfGoingOnBatteries
    Register-ScheduledTask -TaskName "$ScriptName-18" -Action $Action1 -Trigger $Trigger1 -Settings $Settings1 -Description "KBO 데이터 업데이트 (18:00)" -Force
    
    # 22:00 작업  
    $Action2 = New-ScheduledTaskAction -Execute "PowerShell.exe" -Argument "-ExecutionPolicy Bypass -File `"$UpdateScriptPath`""
    $Trigger2 = New-ScheduledTaskTrigger -Daily -At "22:00"
    $Settings2 = New-ScheduledTaskSettingsSet -AllowStartIfOnBatteries -DontStopIfGoingOnBatteries
    Register-ScheduledTask -TaskName "$ScriptName-22" -Action $Action2 -Trigger $Trigger2 -Settings $Settings2 -Description "KBO 데이터 업데이트 (22:00)" -Force
    
    # 00:00 작업
    $Action3 = New-ScheduledTaskAction -Execute "PowerShell.exe" -Argument "-ExecutionPolicy Bypass -File `"$UpdateScriptPath`""
    $Trigger3 = New-ScheduledTaskTrigger -Daily -At "00:00"
    $Settings3 = New-ScheduledTaskSettingsSet -AllowStartIfOnBatteries -DontStopIfGoingOnBatteries
    Register-ScheduledTask -TaskName "$ScriptName-00" -Action $Action3 -Trigger $Trigger3 -Settings $Settings3 -Description "KBO 데이터 업데이트 (00:00)" -Force
    
    Write-Host "✅ 스케줄러 작업 등록 완료!" -ForegroundColor Green
    Write-Host "📋 등록된 작업들:" -ForegroundColor Cyan
    Get-ScheduledTask -TaskName "$ScriptName-*" | Format-Table TaskName, State, NextRunTime
}

function Uninstall-Tasks {
    Write-Host "🗑️  스케줄러 작업 제거 중..." -ForegroundColor Yellow
    
    try {
        Unregister-ScheduledTask -TaskName "$ScriptName-18" -Confirm:$false -ErrorAction SilentlyContinue
        Unregister-ScheduledTask -TaskName "$ScriptName-22" -Confirm:$false -ErrorAction SilentlyContinue  
        Unregister-ScheduledTask -TaskName "$ScriptName-00" -Confirm:$false -ErrorAction SilentlyContinue
        
        Write-Host "✅ 스케줄러 작업 제거 완료!" -ForegroundColor Green
    } catch {
        Write-Host "⚠️  일부 작업을 제거하지 못했습니다: $_" -ForegroundColor Yellow
    }
}

function Test-Update {
    Write-Host "🧪 업데이트 스크립트 테스트 실행..." -ForegroundColor Yellow
    
    & $UpdateScriptPath
    
    $LatestLog = Get-ChildItem $LogPath -Name "update_*.log" | Sort-Object CreationTime -Descending | Select-Object -First 1
    
    if ($LatestLog) {
        Write-Host "📄 최신 로그 파일: $LatestLog" -ForegroundColor Cyan
        Write-Host "📋 로그 내용:" -ForegroundColor Cyan
        Get-Content (Join-Path $LogPath $LatestLog) | Select-Object -Last 10
    }
}

# 메인 실행 로직
if ($Install) {
    Install-Tasks
} elseif ($Uninstall) {
    Uninstall-Tasks
} elseif ($Test) {
    Test-Update
} else {
    Write-Host @"
🚀 KBO 데이터 자동 업데이트 Windows 스케줄러 설정

사용법:
  .\setup-scheduler.ps1 -Install     # 스케줄러 작업 설치
  .\setup-scheduler.ps1 -Uninstall   # 스케줄러 작업 제거
  .\setup-scheduler.ps1 -Test        # 업데이트 스크립트 테스트

📅 스케줄:
  - 매일 18:00
  - 매일 22:00  
  - 매일 00:00

📁 로그 파일: $LogPath
🔧 수동 실행: $UpdateScriptPath

"@ -ForegroundColor Green

    $response = Read-Host "스케줄러 작업을 설치하시겠습니까? (y/N)"
    if ($response -eq 'y' -or $response -eq 'Y') {
        Install-Tasks
    }
}